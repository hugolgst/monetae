name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  checkout-sources:
    name: Checkout sources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

  linter:
    name: Lint check
    runs-on: ubuntu-latest
    needs: checkout-sources
    steps:
      - name: Install nightly toolchain with clippy available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: nightly
          components: clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  
  formatter:
    name: Format check
    runs-on: ubuntu-latest
    needs: checkout-sources
    steps:
      - name: Install nightly toolchain with rustfmt available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: nightly
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
          
  provide-tests-list:
    runs-on: ubuntu-latest
    needs: checkout-sources
    steps:
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: nightly
      - name: Install cargo
        uses: actions-rs/cargo@v1
      - name: Install jq
        uses: sergeysova/jq-action@v2
      - 
        id: set-matrix
        run: echo '::set-output name=matrix::$(sh "$GITHUB_WORKSPACE/list-tests.sh")'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
          
  tests-lib:
    name: Library tests
    runs-on: ubuntu-latest
    needs: [checkout-sources, provide-tests-list]
    strategy:
      matrix:
        test: ${{ fromJson(needs.provide-tests-list.outputs.matrix) }}
    steps:
      - name: Install nightly toolchain with rustfmt available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: nightly
          components: rustfmt

      - name: Run cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.test }}
  
