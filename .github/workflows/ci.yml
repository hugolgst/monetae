name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build-contract:
    name: "Build contract"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sh "$GITHUB_WORKSPACE/.github/workflows/tools/build.sh" contract
      
  build-frontend:
    name: "Build frontend"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sh "$GITHUB_WORKSPACE/.github/workflows/tools/build.sh" frontend

  linter:
    name: "Linter"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: nightly
          components: clippy
      - run: cargo clippy -- -D warnings
  
  formatter:
    name: "Formatter"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: nightly
          components: rustfmt
      - run: cargo fmt --all -- --check

  provide-tests:
    name: "Providing tests list"
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.generate-matrix.outputs.tests }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: $GITHUB_WORKSPACE/.github/workflows/tools/crate-type.sh rlib
      - id: generate-matrix
        run: |
          TESTS="$(sh "$GITHUB_WORKSPACE/.github/workflows/tools/list-tests.sh")"
          echo "::set-output name=tests::$TESTS"
          
  integration-tests:
    name: "Test: ${{ matrix.test }}"
    runs-on: ubuntu-latest
    needs: provide-tests
    strategy:
      matrix:
        test: ${{ fromJson(needs.provide-tests.outputs.tests) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: $GITHUB_WORKSPACE/.github/workflows/tools/crate-type.sh rlib
      - run: cargo test ${{ matrix.test }}

  tests-success:
    name: "Tests success"
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - run: echo "Done!"
